package Olypolyu.randomoddities.mixin;

import Olypolyu.randomoddities.technical.ChatGPT;
import net.minecraft.client.Minecraft;
import net.minecraft.src.ChatLine;
import net.minecraft.src.EntityClientPlayerMP;
import net.minecraft.src.EntityPlayer;
import net.minecraft.src.World;
import org.lwjgl.input.Keyboard;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.gen.Invoker;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;

import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

@Mixin(value = EntityClientPlayerMP.class, remap = false)
public abstract class PlayerClientMixin extends EntityPlayer {

    public PlayerClientMixin(World world) {
        super(world);
    }

    @Invoker("sendChatMessage")
    public abstract void invokeSendChatMessage(String s);

    // this piece of code was generated by chatGPT itself lol
    private static String extractUsername(String text) {
        Pattern pattern = Pattern.compile("<(.*?)>");
        Matcher matcher = pattern.matcher(text);
        if (matcher.find()) {
            return matcher.group(1);
        }
        return null;
    }

    private boolean lastI = false;
    @Inject(method = "onUpdate", at = @At("TAIL"))
    void injectOnUpdate(CallbackInfo ci) throws Exception {
        boolean I = Keyboard.isKeyDown(Keyboard.KEY_I);
        boolean LCONTROL = Keyboard.isKeyDown(Keyboard.KEY_LCONTROL);

        if (Keyboard.isKeyDown(Keyboard.KEY_I) && !lastI && LCONTROL) {

            // get chat
            List<ChatLine> chat = ((ChatInterfaceMixin) Minecraft.getMinecraft().ingameGUI).getChatMessageList();
            String lastChatLine = chat.get(0).message;

            // get username
            String username = extractUsername(lastChatLine);
            if (username != null) username = username.substring(2, username.length()-2);
            else username = "null";

            // remove username from prompt
            lastChatLine = lastChatLine.replaceAll("<.*?> ", "");

            String message;
            message = ChatGPT.chatGPT(lastChatLine, username);
            // really need a better of filtering out invalid characters from this
            message = message.replaceAll("\n", "");

            this.addChatMessage("message length: " + message.length());

            int lineLength = 94;
            for (int i = 0; i < message.length(); i += lineLength) {
                if (i + lineLength < message.length()) {
                    this.invokeSendChatMessage("<GPT> " + message.substring(i, i + lineLength));
                } else this.invokeSendChatMessage("<GPT> " + message.substring(i));
            }
        }

        lastI = I;
    }


}
